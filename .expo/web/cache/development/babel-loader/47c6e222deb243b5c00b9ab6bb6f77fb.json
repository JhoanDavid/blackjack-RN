{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Firebase, { db } from \"../Firebase\";\nimport { FacebookAuthProvider } from \"firebase/firebase-auth\";\nimport * as Facebook from 'expo-facebook';\nexport var UPDATE_EMAIL = 'UPDATE_EMAIL';\nexport var UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport var LOGIN = 'LOGIN';\nexport var SIGNUP = 'SIGNUP';\nexport var LOGIN_FACEBOOK = 'LOGIN_FACEBOOK';\nexport var updateEmail = function updateEmail(email) {\n  return {\n    type: UPDATE_EMAIL,\n    payload: email\n  };\n};\nexport var updatePassword = function updatePassword(password) {\n  return {\n    type: UPDATE_PASSWORD,\n    payload: password\n  };\n};\nexport var login = function login() {\n  return function _callee(dispatch, getState) {\n    var _getState$user, email, password, response;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _getState$user = getState().user, email = _getState$user.email, password = _getState$user.password;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 4:\n            response = _context.sent;\n            dispatch(getUser(response.user.uid));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var getUser = function getUser(uid) {\n  return function _callee2(dispatch, getState) {\n    var user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(db.collection('users').doc(uid).get());\n\n          case 3:\n            user = _context2.sent;\n            dispatch({\n              type: LOGIN,\n              payload: user.data()\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var signup = function signup() {\n  return function _callee3(dispatch, getState) {\n    var _getState$user2, email, password, response, user;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _getState$user2 = getState().user, email = _getState$user2.email, password = _getState$user2.password;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(Firebase.auth().createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            response = _context3.sent;\n\n            if (response.user.uid) {\n              user = {\n                uid: response.user.uid,\n                email: email\n              };\n              db.collection('users').doc(response.user.uid).set(user);\n              dispatch({\n                type: SIGNUP,\n                payload: user\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            alert(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var loginFacebook = function loginFacebook() {\n  return function _callee4(dispatch) {\n    var _await$Facebook$logIn, type, token, provider, credential, facebookProfileData;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            console.log(\"login con faceobook\");\n            console.log(\"577222323683124\");\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync({\n              appId: \"577222323683124\"\n            }));\n\n          case 5:\n            console.log(Facebook);\n            console.log(\"pas√≥ por el await\");\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: ['public_profile']\n            }));\n\n          case 9:\n            _await$Facebook$logIn = _context4.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n            console.log(\"token \" + token);\n\n            if (!(type == 'success')) {\n              _context4.next = 25;\n              break;\n            }\n\n            console.log(\"entro al succes\");\n            provider = new FacebookAuthProvider();\n            provider.addScope('public_profile');\n            console.log(provider);\n            credential = new Firebase.auth.FacebookAuthProvider.credential(token);\n            console.log(credential);\n            Firebase.auth().signInWithCredential(credential);\n            _context4.next = 23;\n            return _regeneratorRuntime.awrap(firebase.auth().signInAndRetrieveDataWithCredential(credential));\n\n          case 23:\n            facebookProfileData = _context4.sent;\n            dispatch({\n              type: LOGIN_FACEBOOK,\n              payload: facebookProfileData\n            });\n\n          case 25:\n            _context4.next = 30;\n            break;\n\n          case 27:\n            _context4.prev = 27;\n            _context4.t0 = _context4[\"catch\"](0);\n            alert(_context4.t0);\n\n          case 30:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 27]], Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/jhoan/Documents/Uniajc/blackjack-RN/actions/user.js"],"names":["Firebase","db","FacebookAuthProvider","Facebook","UPDATE_EMAIL","UPDATE_PASSWORD","LOGIN","SIGNUP","LOGIN_FACEBOOK","updateEmail","email","type","payload","updatePassword","password","login","dispatch","getState","user","auth","signInWithEmailAndPassword","response","getUser","uid","alert","collection","doc","get","data","signup","createUserWithEmailAndPassword","set","loginFacebook","console","log","initializeAsync","appId","logInWithReadPermissionsAsync","permissions","token","provider","addScope","credential","signInWithCredential","firebase","signInAndRetrieveDataWithCredential","facebookProfileData"],"mappings":"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","sourcesContent":["import Firebase, { db } from '../Firebase'\r\nimport { FacebookAuthProvider } from \"firebase/firebase-auth\";\r\nimport {FACEBOOK_APP_ID, FACEBOOK_APP_NAME} from 'react-native-dotenv'\r\nimport * as Facebook from 'expo-facebook'\r\n\r\n\r\n// define types\r\n\r\nexport const UPDATE_EMAIL = 'UPDATE_EMAIL'\r\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD'\r\nexport const LOGIN = 'LOGIN'\r\nexport const SIGNUP = 'SIGNUP'\r\nexport const LOGIN_FACEBOOK = 'LOGIN_FACEBOOK'\r\n\r\n// actions\r\n\r\nexport const updateEmail = email => {\r\n\treturn {\r\n\t\ttype: UPDATE_EMAIL,\r\n\t\tpayload: email\r\n\t}\r\n}\r\n\r\nexport const updatePassword = password => {\r\n\treturn {\r\n\t\ttype: UPDATE_PASSWORD,\r\n\t\tpayload: password\r\n\t}\r\n}\r\n\r\nexport const login = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst { email, password } = getState().user\r\n\t\t\tconst response = await Firebase.auth().signInWithEmailAndPassword(email, password)\r\n\r\n\t\t\tdispatch(getUser(response.user.uid))\r\n\t\t} catch (e) {\r\n\t\t\talert(e)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const getUser = uid => {\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst user = await db\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(uid)\r\n\t\t\t\t.get()\r\n\r\n\t\t\tdispatch({ type: LOGIN, payload: user.data() })\r\n\t\t} catch (e) {\r\n\t\t\talert(e)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const signup = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst { email, password } = getState().user\r\n\t\t\tconst response = await Firebase.auth().createUserWithEmailAndPassword(email, password)\r\n\t\t\tif (response.user.uid) {\r\n\t\t\t\tconst user = {\r\n\t\t\t\t\tuid: response.user.uid,\r\n\t\t\t\t\temail: email\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdb.collection('users')\r\n\t\t\t\t\t.doc(response.user.uid)\r\n\t\t\t\t\t.set(user)\r\n\r\n\t\t\t\tdispatch({ type: SIGNUP, payload: user })\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\talert(e)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loginFacebook = () => {\r\n\t\treturn async (dispatch) => {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(\"login con faceobook\")\r\n\t\t\t\tconsole.log(FACEBOOK_APP_ID);\r\n\t\t\t\tawait Facebook.initializeAsync({appId: FACEBOOK_APP_ID});\r\n\t\t\t\tconsole.log(Facebook);\r\n\t\t\t\tconsole.log(\"pas√≥ por el await\")\r\n\t\t\t\tconst { type, token } = await Facebook.logInWithReadPermissionsAsync({permissions: ['public_profile'],})\r\n\t\t\t\tconsole.log(\"token \"+ token)\r\n\t\t\t\t\r\n\t\t\t\tif (type == 'success') {\r\n\t\t\t\tconsole.log(\"entro al succes\");\r\n\t\t\t\tvar provider = new  FacebookAuthProvider()\r\n\t\t\t\t\r\n\t\t\t\tprovider.addScope('public_profile');\r\n\t\t\t\tconsole.log(provider);\r\n\t\t\t\t//console.log(Firebase);\r\n\t\t\t\t\t//await Firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n\t\t\t\t\t\t\r\n\t\t  \t\t\tconst credential = new Firebase.auth.FacebookAuthProvider.credential(token)\r\n\t\t\t\t\tconsole.log(credential)\r\n\t\t\t\t\tFirebase.auth().signInWithCredential(credential)\r\n\t\t\t\t\tconst facebookProfileData = await firebase.auth().signInAndRetrieveDataWithCredential(credential);\r\n\t\t\t\t\tdispatch({ type: LOGIN_FACEBOOK, payload: facebookProfileData })\r\n\t\t\t\t\t  \r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\talert(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n/* \texport const login = () => {\r\n\t\treturn async (dispatch, getState) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { email, password } = getState().user\r\n\t\t\t\tconst response = await Firebase.auth().signInWithEmailAndPassword(email, password)\r\n\t\r\n\t\t\t\tdispatch(getUser(response.user.uid))\r\n\t\t\t} catch (e) {\r\n\t\t\t\talert(e)\r\n\t\t\t}\r\n\t\t}\r\n\t} */\r\n/* \r\n\tasync loginWithFacebook() {\r\n\r\n\t\t//ENTER YOUR APP ID \r\n\t\tconst { type, token } = await Expo.Facebook.logInWithReadPermissionsAsync('<APP ID>', { permissions: ['public_profile'] })\r\n\t\r\n\t\tif (type == 'success') {\r\n\t\r\n\t\t  const credential = firebase.auth.FacebookAuthProvider.credential(token)\r\n\t\r\n\t\t  firebase.auth().signInWithCredential(credential).catch((error) => {\r\n\t\t\tconsole.log(error)\r\n\t\t  })\r\n\t\t}\r\n\t  } */\r\n"]},"metadata":{},"sourceType":"module"}