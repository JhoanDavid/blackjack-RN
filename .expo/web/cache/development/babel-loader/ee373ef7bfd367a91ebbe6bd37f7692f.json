{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { LOGIN, SIGNUP, LOGIN_FACEBOOK, UPDATE_EMAIL, UPDATE_PASSWORD } from \"../actions/user\";\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN:\n      return action.payload;\n\n    case SIGNUP:\n      return action.payload;\n\n    case LOGIN_FACEBOOK:\n      return action.payload;\n\n    case UPDATE_EMAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.payload\n      });\n\n    case UPDATE_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  user: user\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/jhoan/Documents/Uniajc/blackjack-RN/reducers/index.js"],"names":["combineReducers","LOGIN","SIGNUP","LOGIN_FACEBOOK","UPDATE_EMAIL","UPDATE_PASSWORD","user","state","action","type","payload","email","password","rootReducer"],"mappings":";;;;;;AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,cAAxB,EAAwCC,YAAxC,EAAsDC,eAAtD;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,KAAL;AACC,aAAOO,MAAM,CAACE,OAAd;;AACD,SAAKR,MAAL;AACC,aAAOM,MAAM,CAACE,OAAd;;AACD,SAAKP,cAAL;AACC,aAAOK,MAAM,CAACE,OAAd;;AACD,SAAKN,YAAL;AACC,6CAAYG,KAAZ;AAAmBI,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAAjC;;AACD,SAAKL,eAAL;AACC,6CAAYE,KAAZ;AAAmBK,QAAAA,QAAQ,EAAEJ,MAAM,CAACE;AAApC;;AACD;AACC,aAAOH,KAAP;AAZF;AAcA,CAfD;;AAiBA,IAAMM,WAAW,GAAGb,eAAe,CAAC;AACnCM,EAAAA,IAAI,EAAJA;AADmC,CAAD,CAAnC;AAIA,eAAeO,WAAf","sourcesContent":["import {combineReducers} from 'redux';\r\nimport { LOGIN, SIGNUP, LOGIN_FACEBOOK, UPDATE_EMAIL, UPDATE_PASSWORD } from '../actions/user'\r\n\r\nconst user = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN:\r\n\t\t\treturn action.payload\r\n\t\tcase SIGNUP:\r\n\t\t\treturn action.payload\r\n\t\tcase LOGIN_FACEBOOK:\r\n\t\t\treturn action.payload\r\n\t\tcase UPDATE_EMAIL:\r\n\t\t\treturn { ...state, email: action.payload }\r\n\t\tcase UPDATE_PASSWORD:\r\n\t\t\treturn { ...state, password: action.payload }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n\tuser\r\n})\r\n\r\nexport default rootReducer\r\n\r\n"]},"metadata":{},"sourceType":"module"}